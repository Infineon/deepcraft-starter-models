name: Start Pipeline

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'PR User'
        required: true
      branch:
        description: 'PR Branch'
        required: true
  workflow_call:
    inputs:
      user:
        type: string
        required: true
      branch:
        type: string
        required: true

jobs:
  start_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Requirements
        run: |
          python -m pip install requests
      - uses: jannekem/run-python-script-action@v1
        name: Start Pipeline
        env:
          STARTER_MODELS_PIPELINE_TOKEN: ${{ secrets.STARTER_MODELS_PIPELINE_TOKEN }}
          PR_USER: ${{ github.event.inputs.user }}
          PR_BRANCH: ${{ github.event.inputs.branch }}
        with:
          script: |
            import json
            import os
            import requests
            
            token = os.environ['STARTER_MODELS_PIPELINE_TOKEN']
            if not token:
                raise Exception('Token is missing')
            user = os.environ['PR_USER']
            branch = os.environ['PR_BRANCH']
            response = requests.post(
                url='https://api.bitbucket.org/2.0/repositories/Imagimob/_starter-projects-pipeline/pipelines',
                headers={
                    'Authorization': f'Bearer {token}',
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                },
                json={
                    'target': {
                        'type': 'pipeline_ref_target',
                        'ref_type': 'branch',
                        'ref_name': 'master',
                        'selector': {
                            'type': 'custom',
                            'pattern': 'update-project',
                        }
                    },
                    'variables': [
                        {
                            'key': 'PIPELINE',
                            'value': json.dumps({
                                'repo_owner': user,
                                'branch': branch,
                            }),
                        },
                    ],
                },
            )
            response.raise_for_status()
